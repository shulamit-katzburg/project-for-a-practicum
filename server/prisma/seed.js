const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

const categories = [
  {
    name: 'בריאות',
    subCategories: [
      'רפואה כללית', 'תזונה ודיאטה', 'נפש ובריאות מנטלית', 'רפואת חירום', 'רפואה טבעית', 'פעילות גופנית וכושר', 'בריאות ילדים', 'גריאטריה'
    ]
  },
  {
    name: 'מדע',
    subCategories: [
      'פיזיקה', 'כימיה', 'ביולוגיה', 'גיאולוגיה', 'אסטרונומיה', 'מדעי הסביבה', 'מדעי המחשב', 'מתמטיקה', 'ננוטכנולוגיה'
    ]
  },
  {
    name: 'טכנולוגיה',
    subCategories: [
      'מחשבים וחומרה', 'תוכנה ופיתוח', 'בינה מלאכותית', 'אבטחת מידע', 'אינטרנט ודיגיטל', 'רובוטיקה', 'טכנולוגיות רפואיות', 'מציאות מדומה ורבודה'
    ]
  },
  {
    name: 'חינוך ולמידה',
    subCategories: [
      'חינוך לגיל הרך', 'חינוך יסודי', 'חינוך תיכוני', 'חינוך מיוחד', 'למידה מרחוק', 'אסטרטגיות למידה', 'פדגוגיה', 'חינוך ערכי'
    ]
  },
  {
    name: 'כלכלה ועסקים',
    subCategories: [
      'כלכלה עולמית', 'יזמות וסטארטאפים', 'שוק ההון', 'ניהול', 'שיווק', 'מימון ובנקאות', 'עסקים קטנים ובינוניים', 'מסחר אלקטרוני'
    ]
  },
  {
    name: 'חברה ותרבות',
    subCategories: [
      'סוציולוגיה', 'אנתרופולוגיה', 'תרבויות עולמיות', 'חגים ומסורות', 'מגדר וזהות', 'מגמות חברתיות', 'הגירה וקליטה'
    ]
  },
  {
    name: 'היסטוריה',
    subCategories: [
      'ההיסטוריה העולמית', 'היסטוריה של עם ישראל', 'ימי הביניים', 'העת החדשה', 'היסטוריה צבאית', 'היסטוריה של המדע'
    ]
  },
  {
    name: 'גאוגרפיה',
    subCategories: [
      'גאוגרפיה פיזית', 'גאוגרפיה אנושית', 'מדינות וערים', 'אקלים', 'משאבי טבע', 'מפות וקרטוגרפיה'
    ]
  },
  {
    name: 'אמנות ויצירה',
    subCategories: [
      'ציור', 'פיסול', 'מוזיקה', 'תיאטרון', 'קולנוע', 'צילום', 'עיצוב גרפי', 'עיצוב פנים'
    ]
  },
  {
    name: 'ספורט',
    subCategories: [
      'כדורגל', 'כדורסל', 'אתלטיקה', 'ספורט ימי', 'ספורט אתגרי', 'אומנויות לחימה', 'כושר גופני'
    ]
  },
  {
    name: 'סביבה וטבע',
    subCategories: [
      'קיימות', 'איכות הסביבה', 'אקולוגיה', 'שינויי אקלים', 'בעלי חיים', 'צמחים', 'מחזור ושימוש חוזר'
    ]
  }
];

async function main() {
  for (const cat of categories) {
    const category = await prisma.category.create({
      data: {
        name: cat.name,
        subCategories: {
          create: cat.subCategories.map(name => ({ name }))
        }
      }
    });
    console.log(`Created category: ${category.name}`);
  }
}

main()
  .catch(e => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
